


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* SAM7.S: Startup file for Atmel AT91SAM7 device serie
                       s                     */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2008 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The SAM7.S code is executed after CPU Reset. This f
                       ile may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code remaps exception v
                       ectors from
   20 00000000         ; *  on-chip RAM to address 0.
   21 00000000         ; *
   22 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   23 00000000         ; *  from on-chip Flash to on-chip RAM.
   24 00000000         ; */
   25 00000000         
   26 00000000         
   27 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   28 00000000         
   29 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   30 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   31 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   32 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   33 00000000 00000017 
                       Mode_ABT
                               EQU              0x17



ARM Macro Assembler    Page 2 


   34 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   35 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   36 00000000         
   37 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   38 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   39 00000000         
   40 00000000         
   41 00000000         ; Internal Memory Base Addresses
   42 00000000 00100000 
                       FLASH_BASE
                               EQU              0x00100000
   43 00000000 00200000 
                       RAM_BASE
                               EQU              0x00200000
   44 00000000         
   45 00000000         
   46 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   47 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   51 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   52 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   53 00000000         ;// </h>
   54 00000000         
   55 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   56 00000000 00000080 
                       SVC_Stack_Size
                               EQU              0x00000080
   57 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   58 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   59 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   60 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   61 00000000         
   63 00000000 00000180 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   64 00000000         
   65 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN



ARM Macro Assembler    Page 3 


=3
   66 00000000         
   67 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   68 00000400         __initial_sp
                               SPACE            ISR_Stack_Size
   69 00000580         
   70 00000580         Stack_Top
   71 00000580         
   72 00000580         
   73 00000580         ;// <h> Heap Configuration
   74 00000580         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   75 00000580         ;// </h>
   76 00000580         
   77 00000580 00000000 
                       Heap_Size
                               EQU              0x00000000
   78 00000580         
   79 00000580                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   80 00000000         __heap_base
   81 00000000         Heap_Mem
                               SPACE            Heap_Size
   82 00000000         __heap_limit
   83 00000000         
   84 00000000         
   85 00000000         ; Reset Controller (RSTC) definitions
   86 00000000 FFFFFD00 
                       RSTC_BASE
                               EQU              0xFFFFFD00  ; RSTC Base Address
                                                            
   87 00000000 00000008 
                       RSTC_MR EQU              0x08        ; RSTC_MR Offset
   88 00000000         
   89 00000000         ;/*
   90 00000000         ;// <e> Reset Controller (RSTC)
   91 00000000         ;//   <o1.0>     URSTEN: User Reset Enable
   92 00000000         ;//              <i> Enables NRST Pin to generate Reset
   93 00000000         ;//   <o1.8..11> ERSTL: External Reset Length <0-15>
   94 00000000         ;//              <i> External Reset Time in 2^(ERSTL+1) 
                       Slow Clock Cycles
   95 00000000         ;// </e>
   96 00000000         ;*/
   97 00000000 00000001 
                       RSTC_SETUP
                               EQU              1
   98 00000000 A5000401 
                       RSTC_MR_Val
                               EQU              0xA5000401
   99 00000000         
  100 00000000         
  101 00000000         ; Embedded Flash Controller (EFC) definitions
  102 00000000 FFFFFF00 
                       EFC_BASE
                               EQU              0xFFFFFF00  ; EFC Base Address
  103 00000000 00000060 
                       EFC0_FMR
                               EQU              0x60        ; EFC0_FMR Offset
  104 00000000 00000070 



ARM Macro Assembler    Page 4 


                       EFC1_FMR
                               EQU              0x70        ; EFC1_FMR Offset
  105 00000000         
  106 00000000         ;// <e> Embedded Flash Controller 0 (EFC0)
  107 00000000         ;//   <o1.16..23> FMCN: Flash Microsecond Cycle Number <
                       0-255>
  108 00000000         ;//               <i> Number of Master Clock Cycles in 1
                       us
  109 00000000         ;//   <o1.8..9>   FWS: Flash Wait State
  110 00000000         ;//               <0=> Read: 1 cycle / Write: 2 cycles
  111 00000000         ;//               <1=> Read: 2 cycle / Write: 3 cycles
  112 00000000         ;//               <2=> Read: 3 cycle / Write: 4 cycles
  113 00000000         ;//               <3=> Read: 4 cycle / Write: 4 cycles
  114 00000000         ;// </e>
  115 00000000 00000001 
                       EFC0_SETUP
                               EQU              1
  116 00000000 00320100 
                       EFC0_FMR_Val
                               EQU              0x00320100
  117 00000000         
  118 00000000         ;// <e> Embedded Flash Controller 1 (EFC1)
  119 00000000         ;//   <o1.16..23> FMCN: Flash Microsecond Cycle Number <
                       0-255>
  120 00000000         ;//               <i> Number of Master Clock Cycles in 1
                       us
  121 00000000         ;//   <o1.8..9>   FWS: Flash Wait State
  122 00000000         ;//               <0=> Read: 1 cycle / Write: 2 cycles
  123 00000000         ;//               <1=> Read: 2 cycle / Write: 3 cycles
  124 00000000         ;//               <2=> Read: 3 cycle / Write: 4 cycles
  125 00000000         ;//               <3=> Read: 4 cycle / Write: 4 cycles
  126 00000000         ;// </e>
  127 00000000 00000000 
                       EFC1_SETUP
                               EQU              0
  128 00000000 00320100 
                       EFC1_FMR_Val
                               EQU              0x00320100
  129 00000000         
  130 00000000         
  131 00000000         ; Watchdog Timer (WDT) definitions
  132 00000000 FFFFFD40 
                       WDT_BASE
                               EQU              0xFFFFFD40  ; WDT Base Address
  133 00000000 00000004 
                       WDT_MR  EQU              0x04        ; WDT_MR Offset
  134 00000000         
  135 00000000         ;// <e> Watchdog Timer (WDT)
  136 00000000         ;//   <o1.0..11>  WDV: Watchdog Counter Value <0-4095>
  137 00000000         ;//   <o1.16..27> WDD: Watchdog Delta Value <0-4095>
  138 00000000         ;//   <o1.12>     WDFIEN: Watchdog Fault Interrupt Enabl
                       e
  139 00000000         ;//   <o1.13>     WDRSTEN: Watchdog Reset Enable
  140 00000000         ;//   <o1.14>     WDRPROC: Watchdog Reset Processor
  141 00000000         ;//   <o1.28>     WDDBGHLT: Watchdog Debug Halt
  142 00000000         ;//   <o1.29>     WDIDLEHLT: Watchdog Idle Halt
  143 00000000         ;//   <o1.15>     WDDIS: Watchdog Disable
  144 00000000         ;// </e>
  145 00000000 00000001 



ARM Macro Assembler    Page 5 


                       WDT_SETUP
                               EQU              1
  146 00000000 00008000 
                       WDT_MR_Val
                               EQU              0x00008000
  147 00000000         
  148 00000000         
  149 00000000         ; Power Mangement Controller (PMC) definitions
  150 00000000 FFFFFC00 
                       PMC_BASE
                               EQU              0xFFFFFC00  ; PMC Base Address
  151 00000000 00000020 
                       PMC_MOR EQU              0x20        ; PMC_MOR Offset
  152 00000000 00000024 
                       PMC_MCFR
                               EQU              0x24        ; PMC_MCFR Offset
  153 00000000 0000002C 
                       PMC_PLLR
                               EQU              0x2C        ; PMC_PLLR Offset
  154 00000000 00000030 
                       PMC_MCKR
                               EQU              0x30        ; PMC_MCKR Offset
  155 00000000 00000068 
                       PMC_SR  EQU              0x68        ; PMC_SR Offset
  156 00000000 00000001 
                       PMC_MOSCEN
                               EQU              (1<<0)      ; Main Oscillator E
                                                            nable
  157 00000000 00000002 
                       PMC_OSCBYPASS
                               EQU              (1<<1)      ; Main Oscillator B
                                                            ypass
  158 00000000 0000FF00 
                       PMC_OSCOUNT
                               EQU              (0xFF<<8)   ; Main OScillator S
                                                            tart-up Time
  159 00000000 000000FF 
                       PMC_DIV EQU              (0xFF<<0)   ; PLL Divider
  160 00000000 00003F00 
                       PMC_PLLCOUNT
                               EQU              (0x3F<<8)   ; PLL Lock Counter
  161 00000000 0000C000 
                       PMC_OUT EQU              (0x03<<14)  ; PLL Clock Frequen
                                                            cy Range
  162 00000000 07FF0000 
                       PMC_MUL EQU              (0x7FF<<16) ; PLL Multiplier
  163 00000000 30000000 
                       PMC_USBDIV
                               EQU              (0x03<<28)  ; USB Clock Divider
                                                            
  164 00000000 00000003 
                       PMC_CSS EQU              (3<<0)      ; Clock Source Sele
                                                            ction
  165 00000000 0000001C 
                       PMC_PRES
                               EQU              (7<<2)      ; Prescaler Selecti
                                                            on
  166 00000000 00000001 
                       PMC_MOSCS



ARM Macro Assembler    Page 6 


                               EQU              (1<<0)      ; Main Oscillator S
                                                            table
  167 00000000 00000004 
                       PMC_LOCK
                               EQU              (1<<2)      ; PLL Lock Status
  168 00000000 00000008 
                       PMC_MCKRDY
                               EQU              (1<<3)      ; Master Clock Stat
                                                            us
  169 00000000         
  170 00000000         ;// <e> Power Mangement Controller (PMC)
  171 00000000         ;//   <h> Main Oscillator
  172 00000000         ;//     <o1.0>      MOSCEN: Main Oscillator Enable
  173 00000000         ;//     <o1.1>      OSCBYPASS: Oscillator Bypass
  174 00000000         ;//     <o1.8..15>  OSCCOUNT: Main Oscillator Startup Ti
                       me <0-255>
  175 00000000         ;//   </h>
  176 00000000         ;//   <h> Phase Locked Loop (PLL)
  177 00000000         ;//     <o2.0..7>   DIV: PLL Divider <0-255>
  178 00000000         ;//     <o2.16..26> MUL: PLL Multiplier <0-2047>
  179 00000000         ;//                 <i> PLL Output is multiplied by MUL+
                       1
  180 00000000         ;//     <o2.14..15> OUT: PLL Clock Frequency Range
  181 00000000         ;//                 <0=> 80..160MHz  <1=> Reserved
  182 00000000         ;//                 <2=> 150..220MHz <3=> Reserved
  183 00000000         ;//     <o2.8..13>  PLLCOUNT: PLL Lock Counter <0-63>
  184 00000000         ;//     <o2.28..29> USBDIV: USB Clock Divider
  185 00000000         ;//                 <0=> None  <1=> 2  <2=> 4  <3=> Rese
                       rved
  186 00000000         ;//   </h>
  187 00000000         ;//   <o3.0..1>   CSS: Clock Source Selection
  188 00000000         ;//               <0=> Slow Clock
  189 00000000         ;//               <1=> Main Clock
  190 00000000         ;//               <2=> Reserved
  191 00000000         ;//               <3=> PLL Clock
  192 00000000         ;//   <o3.2..4>   PRES: Prescaler
  193 00000000         ;//               <0=> None
  194 00000000         ;//               <1=> Clock / 2    <2=> Clock / 4
  195 00000000         ;//               <3=> Clock / 8    <4=> Clock / 16
  196 00000000         ;//               <5=> Clock / 32   <6=> Clock / 64
  197 00000000         ;//               <7=> Reserved
  198 00000000         ;// </e>
  199 00000000 00000001 
                       PMC_SETUP
                               EQU              1
  200 00000000 00000601 
                       PMC_MOR_Val
                               EQU              0x00000601
  201 00000000 00191C05 
                       PMC_PLLR_Val
                               EQU              0x00191C05
  202 00000000 00000007 
                       PMC_MCKR_Val
                               EQU              0x00000007
  203 00000000         
  204 00000000         
  205 00000000                 PRESERVE8
  206 00000000         
  207 00000000         



ARM Macro Assembler    Page 7 


  208 00000000         ; Area Definition and Entry Point
  209 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  210 00000000         
  211 00000000                 AREA             RESET, CODE, READONLY
  212 00000000                 ARM
  213 00000000         
  214 00000000         
  215 00000000         ; Exception Vectors
  216 00000000         ;  Mapped to Address 0.
  217 00000000         ;  Absolute addressing mode must be used.
  218 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  219 00000000         
  220 00000000 E59FF018 
                       Vectors LDR              PC,Reset_Addr
  221 00000004 E59FF018        LDR              PC,Undef_Addr
  222 00000008 E59FF018        LDR              PC,SWI_Addr
  223 0000000C E59FF018        LDR              PC,PAbt_Addr
  224 00000010 E59FF018        LDR              PC,DAbt_Addr
  225 00000014 E1A00000        NOP                          ; Reserved Vector
  226 00000018         ;               LDR     PC,IRQ_Addr
  227 00000018 E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_IVR
  228 0000001C         ;               LDR     PC,FIQ_Addr
  229 0000001C E51FFF20        LDR              PC,[PC,#-0xF20] ; Vector From A
                                                            IC_FVR
  230 00000020         
  231 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  232 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  233 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  234 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  235 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  236 00000034 00000000        DCD              0           ; Reserved Address
  237 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  238 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  239 00000040         
  240 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  241 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  242 00000048 EAFFFFFE 
                       PAbt_Handler



ARM Macro Assembler    Page 8 


                               B                PAbt_Handler
  243 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  244 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  245 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  246 00000058         
  247 00000058         
  248 00000058         ; Reset Handler
  249 00000058         
  250 00000058                 EXPORT           Reset_Handler
  251 00000058         Reset_Handler
  252 00000058         
  253 00000058         
  254 00000058         ; Setup RSTC
  255 00000058                 IF               RSTC_SETUP != 0
  256 00000058 E59F00C0        LDR              R0, =RSTC_BASE
  257 0000005C E59F10C0        LDR              R1, =RSTC_MR_Val
  258 00000060 E5801008        STR              R1, [R0, #RSTC_MR]
  259 00000064                 ENDIF
  260 00000064         
  261 00000064         
  262 00000064         ; Setup EFC0
  263 00000064                 IF               EFC0_SETUP != 0
  264 00000064 E59F00BC        LDR              R0, =EFC_BASE
  265 00000068 E59F10BC        LDR              R1, =EFC0_FMR_Val
  266 0000006C E5801060        STR              R1, [R0, #EFC0_FMR]
  267 00000070                 ENDIF
  268 00000070         
  269 00000070         ; Setup EFC1
  270 00000070                 IF               EFC1_SETUP != 0
  274                          ENDIF
  275 00000070         
  276 00000070         
  277 00000070         ; Setup WDT
  278 00000070                 IF               WDT_SETUP != 0
  279 00000070 E59F00B8        LDR              R0, =WDT_BASE
  280 00000074 E3A01902        LDR              R1, =WDT_MR_Val
  281 00000078 E5801004        STR              R1, [R0, #WDT_MR]
  282 0000007C                 ENDIF
  283 0000007C         
  284 0000007C         
  285 0000007C         ; Setup PMC
  286 0000007C                 IF               PMC_SETUP != 0
  287 0000007C E59F00B0        LDR              R0, =PMC_BASE
  288 00000080         
  289 00000080         ;  Setup Main Oscillator
  290 00000080 E59F10B0        LDR              R1, =PMC_MOR_Val
  291 00000084 E5801020        STR              R1, [R0, #PMC_MOR]
  292 00000088         
  293 00000088         ;  Wait until Main Oscillator is stablilized
  294 00000088                 IF               (PMC_MOR_Val:AND:PMC_MOSCEN) !=
 0
  295 00000088 E5902068 
                       MOSCS_Loop



ARM Macro Assembler    Page 9 


                               LDR              R2, [R0, #PMC_SR]
  296 0000008C E2122001        ANDS             R2, R2, #PMC_MOSCS
  297 00000090 0AFFFFFC        BEQ              MOSCS_Loop
  298 00000094                 ENDIF
  299 00000094         
  300 00000094         ;  Setup the PLL
  301 00000094                 IF               (PMC_PLLR_Val:AND:PMC_MUL) != 0
  302 00000094 E59F10A0        LDR              R1, =PMC_PLLR_Val
  303 00000098 E580102C        STR              R1, [R0, #PMC_PLLR]
  304 0000009C         
  305 0000009C         ;  Wait until PLL is stabilized
  306 0000009C E5902068 
                       PLL_Loop
                               LDR              R2, [R0, #PMC_SR]
  307 000000A0 E2122004        ANDS             R2, R2, #PMC_LOCK
  308 000000A4 0AFFFFFC        BEQ              PLL_Loop
  309 000000A8                 ENDIF
  310 000000A8         
  311 000000A8         ;  Select Clock
  312 000000A8                 IF               (PMC_MCKR_Val:AND:PMC_CSS) == 1
 
                                                            ; Main Clock Select
                                                            ed
  336                          ENDIF                        ; Select Clock
  337 000000D4                 ENDIF                        ; PMC_SETUP
  338 000000D4         
  339 000000D4         
  340 000000D4         ; Copy Exception Vectors to Internal RAM
  341 000000D4         
  342 000000D4                 IF               :DEF:RAM_INTVEC
  349                          ENDIF
  350 000000D4         
  351 000000D4         
  352 000000D4         ; Remap on-chip RAM to address 0
  353 000000D4         
  354 000000D4 FFFFFF00 
                       MC_BASE EQU              0xFFFFFF00  ; MC Base Address
  355 000000D4 00000000 
                       MC_RCR  EQU              0x00        ; MC_RCR Offset
  356 000000D4         
  357 000000D4                 IF               :DEF:REMAP
  361                          ENDIF
  362 000000D4         
  363 000000D4         
  364 000000D4         ; Setup Stack for each mode
  365 000000D4         
  366 000000D4 E59F0064        LDR              R0, =Stack_Top
  367 000000D8         
  368 000000D8         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  369 000000D8 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  370 000000DC E1A0D000        MOV              SP, R0
  371 000000E0 E2400000        SUB              R0, R0, #UND_Stack_Size
  372 000000E4         
  373 000000E4         ;  Enter Abort Mode and set its Stack Pointer
  374 000000E4 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  375 000000E8 E1A0D000        MOV              SP, R0



ARM Macro Assembler    Page 10 


  376 000000EC E2400000        SUB              R0, R0, #ABT_Stack_Size
  377 000000F0         
  378 000000F0         ;  Enter FIQ Mode and set its Stack Pointer
  379 000000F0 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  380 000000F4 E1A0D000        MOV              SP, R0
  381 000000F8 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  382 000000FC         
  383 000000FC         ;  Enter IRQ Mode and set its Stack Pointer
  384 000000FC E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  385 00000100 E1A0D000        MOV              SP, R0
  386 00000104 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  387 00000108         
  388 00000108         ;  Enter Supervisor Mode and set its Stack Pointer
  389 00000108 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  390 0000010C E1A0D000        MOV              SP, R0
  391 00000110 E2400080        SUB              R0, R0, #SVC_Stack_Size
  392 00000114         
  393 00000114         ;  Enter User Mode and set its Stack Pointer
  394 00000114 E321F010        MSR              CPSR_c, #Mode_USR
  395 00000118                 IF               :DEF:__MICROLIB
  396 00000118         
  397 00000118                 EXPORT           __initial_sp
  398 00000118         
  399 00000118                 ELSE
  404                          ENDIF
  405 00000118         
  406 00000118         
  407 00000118         ; Enter the C code
  408 00000118         
  409 00000118                 IMPORT           __main
  410 00000118 E59F0024        LDR              R0, =__main
  411 0000011C E12FFF10        BX               R0
  412 00000120         
  413 00000120         
  414 00000120                 IF               :DEF:__MICROLIB
  415 00000120         
  416 00000120                 EXPORT           __heap_base
  417 00000120                 EXPORT           __heap_limit
  418 00000120         
  419 00000120                 ELSE
  432                          ENDIF
  433 00000120         
  434 00000120         
  435 00000120                 END
              FFFFFD00 
              A5000401 
              FFFFFF00 
              00320100 
              FFFFFD40 
              FFFFFC00 
              00000601 
              00191C05 
              00000000 
              00000000 
Command Line: --16 --debug --xref --apcs=interwork --depend=.\Obj\SAM7.d -o.\Ob
j\SAM7.o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\A



ARM Macro Assembler    Page 11 


tmel\SAM7X --predefine="__MICROLIB SETA 1" --list=.\Lst\SAM7.lst SAM7.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 65 in file SAM7.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 67 in file SAM7.s
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00000580

Symbol: Stack_Top
   Definitions
      At line 70 in file SAM7.s
   Uses
      At line 366 in file SAM7.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 68 in file SAM7.s
   Uses
      At line 397 in file SAM7.s
Comment: __initial_sp used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 79 in file SAM7.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 81 in file SAM7.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 80 in file SAM7.s
   Uses
      At line 416 in file SAM7.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 82 in file SAM7.s
   Uses
      At line 417 in file SAM7.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 235 in file SAM7.s
   Uses
      At line 224 in file SAM7.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 243 in file SAM7.s
   Uses
      At line 235 in file SAM7.s
      At line 243 in file SAM7.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 238 in file SAM7.s
   Uses
      None
Comment: FIQ_Addr unused
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 245 in file SAM7.s
   Uses
      At line 238 in file SAM7.s
      At line 245 in file SAM7.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 237 in file SAM7.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 244 in file SAM7.s
   Uses
      At line 237 in file SAM7.s
      At line 244 in file SAM7.s

MOSCS_Loop 00000088

Symbol: MOSCS_Loop
   Definitions
      At line 295 in file SAM7.s
   Uses
      At line 297 in file SAM7.s
Comment: MOSCS_Loop used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 234 in file SAM7.s
   Uses
      At line 223 in file SAM7.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 242 in file SAM7.s
   Uses
      At line 234 in file SAM7.s
      At line 242 in file SAM7.s

PLL_Loop 0000009C

Symbol: PLL_Loop
   Definitions
      At line 306 in file SAM7.s
   Uses
      At line 308 in file SAM7.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 211 in file SAM7.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 231 in file SAM7.s
   Uses
      At line 220 in file SAM7.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 251 in file SAM7.s
   Uses
      At line 231 in file SAM7.s
      At line 250 in file SAM7.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 233 in file SAM7.s
   Uses
      At line 222 in file SAM7.s
Comment: SWI_Addr used once
SWI_Handler 00000044



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SWI_Handler
   Definitions
      At line 241 in file SAM7.s
   Uses
      At line 233 in file SAM7.s
      At line 241 in file SAM7.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 232 in file SAM7.s
   Uses
      At line 221 in file SAM7.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 240 in file SAM7.s
   Uses
      At line 232 in file SAM7.s
      At line 240 in file SAM7.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 220 in file SAM7.s
   Uses
      None
Comment: Vectors unused
WAIT_Rdy1 000000B4

Symbol: WAIT_Rdy1
   Definitions
      At line 328 in file SAM7.s
   Uses
      At line 330 in file SAM7.s
Comment: WAIT_Rdy1 used once
WAIT_Rdy2 000000C8

Symbol: WAIT_Rdy2
   Definitions
      At line 333 in file SAM7.s
   Uses
      At line 335 in file SAM7.s
Comment: WAIT_Rdy2 used once
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 57 in file SAM7.s
   Uses
      At line 63 in file SAM7.s
      At line 376 in file SAM7.s

EFC0_FMR 00000060

Symbol: EFC0_FMR
   Definitions
      At line 103 in file SAM7.s
   Uses
      At line 266 in file SAM7.s
Comment: EFC0_FMR used once
EFC0_FMR_Val 00320100

Symbol: EFC0_FMR_Val
   Definitions
      At line 116 in file SAM7.s
   Uses
      At line 265 in file SAM7.s
Comment: EFC0_FMR_Val used once
EFC0_SETUP 00000001

Symbol: EFC0_SETUP
   Definitions
      At line 115 in file SAM7.s
   Uses
      At line 263 in file SAM7.s
Comment: EFC0_SETUP used once
EFC1_FMR 00000070

Symbol: EFC1_FMR
   Definitions
      At line 104 in file SAM7.s
   Uses
      None
Comment: EFC1_FMR unused
EFC1_FMR_Val 00320100

Symbol: EFC1_FMR_Val
   Definitions
      At line 128 in file SAM7.s
   Uses
      None
Comment: EFC1_FMR_Val unused
EFC1_SETUP 00000000

Symbol: EFC1_SETUP
   Definitions
      At line 127 in file SAM7.s
   Uses
      At line 270 in file SAM7.s
Comment: EFC1_SETUP used once
EFC_BASE FFFFFF00




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: EFC_BASE
   Definitions
      At line 102 in file SAM7.s
   Uses
      At line 264 in file SAM7.s
Comment: EFC_BASE used once
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 58 in file SAM7.s
   Uses
      At line 63 in file SAM7.s
      At line 381 in file SAM7.s

FLASH_BASE 00100000

Symbol: FLASH_BASE
   Definitions
      At line 42 in file SAM7.s
   Uses
      None
Comment: FLASH_BASE unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 38 in file SAM7.s
   Uses
      At line 369 in file SAM7.s
      At line 374 in file SAM7.s
      At line 379 in file SAM7.s
      At line 384 in file SAM7.s
      At line 389 in file SAM7.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 77 in file SAM7.s
   Uses
      At line 81 in file SAM7.s
Comment: Heap_Size used once
IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 59 in file SAM7.s
   Uses
      At line 63 in file SAM7.s
      At line 386 in file SAM7.s

ISR_Stack_Size 00000180

Symbol: ISR_Stack_Size
   Definitions
      At line 63 in file SAM7.s
   Uses
      At line 68 in file SAM7.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 37 in file SAM7.s
   Uses
      At line 369 in file SAM7.s
      At line 374 in file SAM7.s
      At line 379 in file SAM7.s
      At line 384 in file SAM7.s
      At line 389 in file SAM7.s

MC_BASE FFFFFF00

Symbol: MC_BASE
   Definitions
      At line 354 in file SAM7.s
   Uses
      None
Comment: MC_BASE unused
MC_RCR 00000000

Symbol: MC_RCR
   Definitions
      At line 355 in file SAM7.s
   Uses
      None
Comment: MC_RCR unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 33 in file SAM7.s
   Uses
      At line 374 in file SAM7.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 30 in file SAM7.s
   Uses
      At line 379 in file SAM7.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 31 in file SAM7.s
   Uses
      At line 384 in file SAM7.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 32 in file SAM7.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 389 in file SAM7.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 35 in file SAM7.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 34 in file SAM7.s
   Uses
      At line 369 in file SAM7.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 29 in file SAM7.s
   Uses
      At line 394 in file SAM7.s
Comment: Mode_USR used once
PMC_BASE FFFFFC00

Symbol: PMC_BASE
   Definitions
      At line 150 in file SAM7.s
   Uses
      At line 287 in file SAM7.s
Comment: PMC_BASE used once
PMC_CSS 00000003

Symbol: PMC_CSS
   Definitions
      At line 164 in file SAM7.s
   Uses
      At line 312 in file SAM7.s
      At line 324 in file SAM7.s

PMC_DIV 000000FF

Symbol: PMC_DIV
   Definitions
      At line 159 in file SAM7.s
   Uses
      None
Comment: PMC_DIV unused
PMC_LOCK 00000004

Symbol: PMC_LOCK
   Definitions
      At line 167 in file SAM7.s
   Uses
      At line 307 in file SAM7.s
Comment: PMC_LOCK used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

PMC_MCFR 00000024

Symbol: PMC_MCFR
   Definitions
      At line 152 in file SAM7.s
   Uses
      None
Comment: PMC_MCFR unused
PMC_MCKR 00000030

Symbol: PMC_MCKR
   Definitions
      At line 154 in file SAM7.s
   Uses
      At line 327 in file SAM7.s
      At line 332 in file SAM7.s

PMC_MCKRDY 00000008

Symbol: PMC_MCKRDY
   Definitions
      At line 168 in file SAM7.s
   Uses
      At line 329 in file SAM7.s
      At line 334 in file SAM7.s

PMC_MCKR_Val 00000007

Symbol: PMC_MCKR_Val
   Definitions
      At line 202 in file SAM7.s
   Uses
      At line 312 in file SAM7.s
      At line 324 in file SAM7.s
      At line 325 in file SAM7.s
      At line 331 in file SAM7.s

PMC_MOR 00000020

Symbol: PMC_MOR
   Definitions
      At line 151 in file SAM7.s
   Uses
      At line 291 in file SAM7.s
Comment: PMC_MOR used once
PMC_MOR_Val 00000601

Symbol: PMC_MOR_Val
   Definitions
      At line 200 in file SAM7.s
   Uses
      At line 290 in file SAM7.s
      At line 294 in file SAM7.s

PMC_MOSCEN 00000001

Symbol: PMC_MOSCEN
   Definitions
      At line 156 in file SAM7.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 294 in file SAM7.s
Comment: PMC_MOSCEN used once
PMC_MOSCS 00000001

Symbol: PMC_MOSCS
   Definitions
      At line 166 in file SAM7.s
   Uses
      At line 296 in file SAM7.s
Comment: PMC_MOSCS used once
PMC_MUL 07FF0000

Symbol: PMC_MUL
   Definitions
      At line 162 in file SAM7.s
   Uses
      At line 301 in file SAM7.s
Comment: PMC_MUL used once
PMC_OSCBYPASS 00000002

Symbol: PMC_OSCBYPASS
   Definitions
      At line 157 in file SAM7.s
   Uses
      None
Comment: PMC_OSCBYPASS unused
PMC_OSCOUNT 0000FF00

Symbol: PMC_OSCOUNT
   Definitions
      At line 158 in file SAM7.s
   Uses
      None
Comment: PMC_OSCOUNT unused
PMC_OUT 0000C000

Symbol: PMC_OUT
   Definitions
      At line 161 in file SAM7.s
   Uses
      None
Comment: PMC_OUT unused
PMC_PLLCOUNT 00003F00

Symbol: PMC_PLLCOUNT
   Definitions
      At line 160 in file SAM7.s
   Uses
      None
Comment: PMC_PLLCOUNT unused
PMC_PLLR 0000002C

Symbol: PMC_PLLR
   Definitions
      At line 153 in file SAM7.s
   Uses
      At line 303 in file SAM7.s
Comment: PMC_PLLR used once



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

PMC_PLLR_Val 00191C05

Symbol: PMC_PLLR_Val
   Definitions
      At line 201 in file SAM7.s
   Uses
      At line 301 in file SAM7.s
      At line 302 in file SAM7.s

PMC_PRES 0000001C

Symbol: PMC_PRES
   Definitions
      At line 165 in file SAM7.s
   Uses
      At line 326 in file SAM7.s
Comment: PMC_PRES used once
PMC_SETUP 00000001

Symbol: PMC_SETUP
   Definitions
      At line 199 in file SAM7.s
   Uses
      At line 286 in file SAM7.s
Comment: PMC_SETUP used once
PMC_SR 00000068

Symbol: PMC_SR
   Definitions
      At line 155 in file SAM7.s
   Uses
      At line 295 in file SAM7.s
      At line 306 in file SAM7.s
      At line 328 in file SAM7.s
      At line 333 in file SAM7.s

PMC_USBDIV 30000000

Symbol: PMC_USBDIV
   Definitions
      At line 163 in file SAM7.s
   Uses
      None
Comment: PMC_USBDIV unused
RAM_BASE 00200000

Symbol: RAM_BASE
   Definitions
      At line 43 in file SAM7.s
   Uses
      None
Comment: RAM_BASE unused
RSTC_BASE FFFFFD00

Symbol: RSTC_BASE
   Definitions
      At line 86 in file SAM7.s
   Uses
      At line 256 in file SAM7.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: RSTC_BASE used once
RSTC_MR 00000008

Symbol: RSTC_MR
   Definitions
      At line 87 in file SAM7.s
   Uses
      At line 258 in file SAM7.s
Comment: RSTC_MR used once
RSTC_MR_Val A5000401

Symbol: RSTC_MR_Val
   Definitions
      At line 98 in file SAM7.s
   Uses
      At line 257 in file SAM7.s
Comment: RSTC_MR_Val used once
RSTC_SETUP 00000001

Symbol: RSTC_SETUP
   Definitions
      At line 97 in file SAM7.s
   Uses
      At line 255 in file SAM7.s
Comment: RSTC_SETUP used once
SVC_Stack_Size 00000080

Symbol: SVC_Stack_Size
   Definitions
      At line 56 in file SAM7.s
   Uses
      At line 63 in file SAM7.s
      At line 391 in file SAM7.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 55 in file SAM7.s
   Uses
      At line 63 in file SAM7.s
      At line 371 in file SAM7.s

USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 60 in file SAM7.s
   Uses
      At line 67 in file SAM7.s
Comment: USR_Stack_Size used once
WDT_BASE FFFFFD40

Symbol: WDT_BASE
   Definitions
      At line 132 in file SAM7.s
   Uses
      At line 279 in file SAM7.s
Comment: WDT_BASE used once



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

WDT_MR 00000004

Symbol: WDT_MR
   Definitions
      At line 133 in file SAM7.s
   Uses
      At line 281 in file SAM7.s
Comment: WDT_MR used once
WDT_MR_Val 00008000

Symbol: WDT_MR_Val
   Definitions
      At line 146 in file SAM7.s
   Uses
      At line 280 in file SAM7.s
Comment: WDT_MR_Val used once
WDT_SETUP 00000001

Symbol: WDT_SETUP
   Definitions
      At line 145 in file SAM7.s
   Uses
      At line 278 in file SAM7.s
Comment: WDT_SETUP used once
59 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 409 in file SAM7.s
   Uses
      At line 410 in file SAM7.s
Comment: __main used once
1 symbol
425 symbols in table
